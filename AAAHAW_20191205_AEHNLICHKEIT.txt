#gap -L GAP_WORKSPACE #mit ERGS2_2945_20180813, AB_JETZT_NEU.txt bis RVOND4 mit dmax:=10 und PcgsOfR.txt.
##weiterer Versuch: Markierung verfeinern mit Aut(Aut(G)) oder wenigstens mit ConjugacyClasses
#Read("PcgsOfR.txt");
#Read("AB_JETZT_NEU.txt"); bis Ausgabe "....." reicht
#die schweren waren  [ 655, 569 ], [ 713, 705 ] in AAAHAX Zeile 500
#0zuerst RVOND wenn nur 0,1 in D:
RVOND1:=function(dd,D)
  local d,j,R,RI;
  R:=[[0]];
  for d in [1..dd] do
    RI:=[D[2^(d-1)],D[2^(d-1)]];
    for j in [2..d] do
      Add(RI,D[2^(d-1)+2^(j-2)]);
      od;
    Add(R,RI);
    od;
  return R;
  end;
#RVOND1(4,[ 1, 1, 2, 1, 2, 3, 2, 0, 0, 0, 2, 0, 2, 3, 3 ]);[[0],[1,1],[1,1,2],[1,1,2,3],[0,0,0,0,0]];

#1zuerst als Probe aus ERGS1 echte Gruppen machen mit PcgsOfR:
dd:=4;
R:=ERGS1[dd][6]; #[[1],[1,1]], für PcgsOfR(R) muss das [[0],[1,1],[1,1,1]] sein, also los:
D:=DIAG(R); #ergibt [0,1,1,1]
Remove(D,1);
RD:=RVOND1(dd,D);[[0],[1,1],[1,1,1]];
G:=PcgsOfR(RD); IdSmallGroup(G); #müsste irgendein [8,x] sein

for dd in [1..7] do #IdSmallGroup nur bis 256=2*2^7
  Print("\n");
  for i in [1..Size(ERGS1[dd])] do
    R:=ERGS1[dd][i];
    D:=DIAG(R);
    Remove(D,1);
    RD:=RVOND1(dd,D);
    G:=PcgsOfR(RD); 
    ID:=IdSmallGroup(G);
    Print(ID);
    od;
  od;

#[ 4, 1 ]
#[ 8, 3 ][ 8, 2 ][ 8, 4 ]
#[ 16, 11 ][ 16, 10 ][ 16, 13 ][ 16, 12 ]
#[ 32, 46 ][ 32, 45 ][ 32, 49 ][ 32, 48 ][ 32, 47 ][ 32, 50 ]
#[ 64, 261 ][ 64, 260 ][ 64, 264 ][ 64, 263 ][ 64, 262 ][ 64, 265 ][ 64, 266 ]
#[ 128, 2320 ][ 128, 2319 ][ 128, 2323 ][ 128, 2322 ][ 128, 2321 ][ 128, 2324 ][ 128, 2327 ][ 128, 2325 ][ 128, 2326 ]
#[ 256, 56083 ][ 256, 56082 ][ 256, 56086 ][ 256, 56085 ][ 256, 56084 ][ 256, 56087 ][ 256, 56090 ][ 256, 56088 ][ 256, 56091 ][ 256, 56089 ]
#10494201 - 10494212

#2wenn das bis hierher funktioniert, dann Versuch zusätzliche Markierung finden:

VERFEINERUNG:=function(D)
  SD:=Size(D);
  C:=COMPDIAGSTABERZ(D);
  S:=Group(STABMACH2(C)); #hier vorsichtshalber nochmal mit Aut(G) vergleichen
  T:=ConjugacyClasses(S);
  Print("T",Size(T),"\c");
  #U:=Orbits(S,[1..SD]);
  V:=List([1..Size(T)],i->Orbits(Group(List(T[i])),[1..SD]));#auch nur [2]
#  V:=List([3],i->Orbits(Group(List(T[i])),[2]));#nur [3] [2]
  Print("V\c");
  WS:=Collected(List(V,v->List(v,w->SortedList(w))));
  Print("WS\c");
  #W:=Collected(List(V,v->Collected(List(v,w->Collected(List(w,i->C[i]))))));
  return [C,Collected(C),WS];
  end;

dd:=3; 
i:=1;
R:=ERGS1[dd][i];
D:=DIAG(R);
VERFEINERUNG(D);
#Zwischenergebnis:
#U=  [ [ 1 ], [ 2, 3 ], [ 4 ], [ 5, 7, 6, 8 ] ]
#V=[ [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ], [ 6 ], [ 7 ], [ 8 ] ], 
#    [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5, 6, 7, 8 ] ], 
#    [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5, 8 ], [ 6, 7 ] ], 
#    [ [ 1 ], [ 2, 3 ], [ 4 ], [ 5, 8 ], [ 6, 7 ] ], 
#    [ [ 1 ], [ 2, 3 ], [ 4 ], [ 5, 6, 7, 8 ] ] ]
#das ist schon mal eine Verfeinerung 2/3 und 58/67

dd:=1;R:=[[1]];D:=DIAG(R); VERFEINERUNG(D);#nix brauchbares
  [ 2, 3 ], 
  [ [ 2, 1 ], [ 3, 1 ] ], 
  [ [ [ [ 1 ], [ 2 ] ], 1 ] ] ]
dd:=2;R:=[[1],[0,0]];D:=DIAG(R); VERFEINERUNG(D);#[ 3, 7, 11, 15 ], [ 4, 8, 12, 16 ]
  [ 2, 1, 0, 0 ], 
  [ [ 0, 2 ], [ 1, 1 ], [ 2, 1 ] ], 
  [ [ [ [ 1 ], [ 2 ], [ 3 ], [ 4 ] ], 1 ], [ [ [ 1 ], [ 2 ], [ 3, 4 ] ], 1 ] 
     ] ]
dd:=2;R:=[[1],[1,1]];D:=DIAG(R); VERFEINERUNG(D);#[ 2, 6 ], [ 3, 7 ], [ 4, 8 ]
  [ 2, 1, 1, 1 ], 
  [ [ 1, 3 ], [ 2, 1 ] ], 
  [ [ [ [ 1 ], [ 2 ], [ 3 ], [ 4 ] ], 1 ], [ [ [ 1 ], [ 2, 3, 4 ] ], 2 ] ] ]
dd:=3;R:=[[1],[0,0],[1,1,1]];D:=DIAG(R); VERFEINERUNG(D);#[ 2, 10 ], [ 3, 11 ], [ 4, 12 ], [ 5, 13 ], [ 6, 14 ], [ 7, 15 ], [ 8, 16 ]
  [ 2, 1, 0, 0, 1, 1, 3, 0 ], 
  [ [ 0, 3 ], [ 1, 3 ], [ 2, 1 ], [ 3, 1 ] ], 
  [ [ [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ], [ 6 ], [ 7 ], [ 8 ] ], 1 ], 
      [ [ [ 1 ], [ 2, 5, 6 ], [ 3, 4, 8 ], [ 7 ] ], 2 ] ] ]
dd:=4;R:=[[1],[0,0],[1,1,1],[0,0,0,0]];D:=DIAG(R); VERFEINERUNG(D);# [ 2, 18 ], [ 3, 19 ]... und [ 2, 6, 5 ], [ 7, 12, 14 ] 
  [ 2, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0 ], 
  [ [ 0, 9 ], [ 1, 6 ], [ 2, 1 ] ], 
  [ 
      [ [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ], [ 6 ], [ 7 ], [ 8 ], [ 9 ], [ 10 ], 
              [ 11 ], [ 12 ], [ 13 ], [ 14 ], [ 15 ], [ 16 ] ], 1 ], 
      [ 
          [ [ 1 ], [ 2, 5, 6 ], [ 3, 4, 8, 9, 10, 11, 13, 15, 16 ], 
              [ 7, 12, 14 ] ], 5 ], 
      [ [ [ 1 ], [ 2, 5, 6, 7, 12, 14 ], [ 3, 4, 8, 9, 10, 11, 13, 15, 16 ] ],
          3 ] ] ]
dd:=4;R:=[[1],[0,0],[1,1,1],[1,1,1,1]];D:=DIAG(R); VERFEINERUNG(D);# [ 2, 18 ], [ 3, 19 ],
  [ 2, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1 ], 
  [ [ 0, 5 ], [ 1, 10 ], [ 2, 1 ] ], 
  [ 
      [ [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ], [ 6 ], [ 7 ], [ 8 ], [ 9 ], [ 10 ], 
              [ 11 ], [ 12 ], [ 13 ], [ 14 ], [ 15 ], [ 16 ] ], 1 ], 
      [ [ [ 1 ], [ 2, 5, 6, 7, 9, 10, 11, 13, 15, 16 ], [ 3, 4, 8, 12, 14 ] ],
          6 ] ] ]
dd:=5;R:=[[1],[0,0],[1,1,1],[0,0,0,0],[1,1,1,1,1]];D:=DIAG(R); VERFEINERUNG(D);# [ 2, 34 ], [ 3, 35 ], 
  [ 2, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 
      3, 0, 1, 1, 0, 0, 0, 1 ], 
  [ [ 0, 15 ], [ 1, 15 ], [ 2, 1 ], [ 3, 1 ] ], 
  [ 
      [ [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ], [ 6 ], [ 7 ], [ 8 ], [ 9 ], [ 10 ], 
              [ 11 ], [ 12 ], [ 13 ], [ 14 ], [ 15 ], [ 16 ], [ 17 ], [ 18 ], 
              [ 19 ], [ 20 ], [ 21 ], [ 22 ], [ 23 ], [ 24 ], [ 25 ], [ 26 ], 
              [ 27 ], [ 28 ], [ 29 ], [ 30 ], [ 31 ], [ 32 ] ], 1 ], 
      [ [ [ 1 ], [ 2, 5, 6, 7, 12, 14, 17, 18, 19, 21, 23, 24, 27, 28, 32 ], 
              [ 3, 4, 8, 9, 10, 11, 13, 15, 16, 20, 22, 26, 29, 30, 31 ], 
              [ 25 ] ], 10 ] ] ]
dd:=6;R:=[[1],[0,0],[1,1,1],[0,0,0,0],[1,1,1,1,1],[0,0,0,0,0,0]];D:=DIAG(R); VERFEINERUNG(D);#
  [ 2, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 
      1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 
      0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0 ], 
  [ [ 0, 35 ], [ 1, 28 ], [ 2, 1 ] ], 
  [ 
      [ [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ], [ 6 ], [ 7 ], [ 8 ], [ 9 ], [ 10 ], 
              [ 11 ], [ 12 ], [ 13 ], [ 14 ], [ 15 ], [ 16 ], [ 17 ], [ 18 ], 
              [ 19 ], [ 20 ], [ 21 ], [ 22 ], [ 23 ], [ 24 ], [ 25 ], [ 26 ], 
              [ 27 ], [ 28 ], [ 29 ], [ 30 ], [ 31 ], [ 32 ], [ 33 ], [ 34 ], 
              [ 35 ], [ 36 ], [ 37 ], [ 38 ], [ 39 ], [ 40 ], [ 41 ], [ 42 ], 
              [ 43 ], [ 44 ], [ 45 ], [ 46 ], [ 47 ], [ 48 ], [ 49 ], [ 50 ], 
              [ 51 ], [ 52 ], [ 53 ], [ 54 ], [ 55 ], [ 56 ], [ 57 ], [ 58 ], 
              [ 59 ], [ 60 ], [ 61 ], [ 62 ], [ 63 ], [ 64 ] ], 1 ], 
      [ 
          [ [ 1 ], 
              [ 2, 5, 6, 7, 12, 14, 17, 18, 19, 21, 23, 24, 25, 27, 28, 32, 
                  36, 38, 42, 45, 46, 47, 50, 53, 54, 55, 60, 62 ], 
              [ 3, 4, 8, 9, 10, 11, 13, 15, 16, 20, 22, 26, 29, 30, 31, 33, 
                  34, 35, 37, 39, 40, 41, 43, 44, 48, 49, 51, 52, 56, 57, 58, 
                  59, 61, 63, 64 ] ], 21 ] ] ]
dd:=6;R:=[[1],[0,0],[1,1,1],[0,0,0,0],[1,1,1,1,1],[1,1,1,1,1,1]];D:=DIAG(R); VERFEINERUNG(D);#
  [ 2, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 
      1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 
      1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1 ], 
  [ [ 0, 27 ], [ 1, 36 ], [ 2, 1 ] ], 
  [ 
      [ [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ], [ 6 ], [ 7 ], [ 8 ], [ 9 ], [ 10 ], 
              [ 11 ], [ 12 ], [ 13 ], [ 14 ], [ 15 ], [ 16 ], [ 17 ], [ 18 ], 
              [ 19 ], [ 20 ], [ 21 ], [ 22 ], [ 23 ], [ 24 ], [ 25 ], [ 26 ], 
              [ 27 ], [ 28 ], [ 29 ], [ 30 ], [ 31 ], [ 32 ], [ 33 ], [ 34 ], 
              [ 35 ], [ 36 ], [ 37 ], [ 38 ], [ 39 ], [ 40 ], [ 41 ], [ 42 ], 
              [ 43 ], [ 44 ], [ 45 ], [ 46 ], [ 47 ], [ 48 ], [ 49 ], [ 50 ], 
              [ 51 ], [ 52 ], [ 53 ], [ 54 ], [ 55 ], [ 56 ], [ 57 ], [ 58 ], 
              [ 59 ], [ 60 ], [ 61 ], [ 62 ], [ 63 ], [ 64 ] ], 1 ], 
      [ 
          [ [ 1 ], 
              [ 2, 5, 6, 7, 12, 14, 17, 18, 19, 21, 23, 24, 25, 27, 28, 32, 
                  33, 34, 35, 37, 39, 40, 41, 43, 44, 48, 49, 51, 52, 56, 57, 
                  58, 59, 61, 63, 64 ], 
              [ 3, 4, 8, 9, 10, 11, 13, 15, 16, 20, 22, 26, 29, 30, 31, 36, 
                  38, 42, 45, 46, 47, 50, 53, 54, 55, 60, 62 ] ], 24 ] ] ]
dd:=7;R:=[[1],[0,0],[1,1,1],[0,0,0,0],[1,1,1,1,1],[0,0,0,0,0,0],[1,1,1,1,1,1,1]];D:=DIAG(R); VERFEINERUNG(D);#
  [ 2, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 
      1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 
      0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 
      1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 
      3, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 
      0, 1, 0, 0, 1, 1, 1, 0 ], 
  [ [ 0, 63 ], [ 1, 63 ], [ 2, 1 ], [ 3, 1 ] ], 
  [ 
      [ [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ], [ 6 ], [ 7 ], [ 8 ], [ 9 ], [ 10 ], 
              [ 11 ], [ 12 ], [ 13 ], [ 14 ], [ 15 ], [ 16 ], [ 17 ], [ 18 ], 
              [ 19 ], [ 20 ], [ 21 ], [ 22 ], [ 23 ], [ 24 ], [ 25 ], [ 26 ], 
              [ 27 ], [ 28 ], [ 29 ], [ 30 ], [ 31 ], [ 32 ], [ 33 ], [ 34 ], 
              [ 35 ], [ 36 ], [ 37 ], [ 38 ], [ 39 ], [ 40 ], [ 41 ], [ 42 ], 
              [ 43 ], [ 44 ], [ 45 ], [ 46 ], [ 47 ], [ 48 ], [ 49 ], [ 50 ], 
              [ 51 ], [ 52 ], [ 53 ], [ 54 ], [ 55 ], [ 56 ], [ 57 ], [ 58 ], 
              [ 59 ], [ 60 ], [ 61 ], [ 62 ], [ 63 ], [ 64 ], [ 65 ], [ 66 ], 
              [ 67 ], [ 68 ], [ 69 ], [ 70 ], [ 71 ], [ 72 ], [ 73 ], [ 74 ], 
              [ 75 ], [ 76 ], [ 77 ], [ 78 ], [ 79 ], [ 80 ], [ 81 ], [ 82 ], 
              [ 83 ], [ 84 ], [ 85 ], [ 86 ], [ 87 ], [ 88 ], [ 89 ], [ 90 ], 
              [ 91 ], [ 92 ], [ 93 ], [ 94 ], [ 95 ], [ 96 ], [ 97 ], [ 98 ], 
              [ 99 ], [ 100 ], [ 101 ], [ 102 ], [ 103 ], [ 104 ], [ 105 ], 
              [ 106 ], [ 107 ], [ 108 ], [ 109 ], [ 110 ], [ 111 ], [ 112 ], 
              [ 113 ], [ 114 ], [ 115 ], [ 116 ], [ 117 ], [ 118 ], [ 119 ], 
              [ 120 ], [ 121 ], [ 122 ], [ 123 ], [ 124 ], [ 125 ], [ 126 ], 
              [ 127 ], [ 128 ] ], 1 ], 
      [ 
          [ [ 1 ], 
              [ 2, 5, 6, 7, 12, 14, 17, 18, 19, 21, 23, 24, 25, 27, 28, 32, 
                  36, 38, 42, 45, 46, 47, 50, 53, 54, 55, 60, 62, 65, 66, 67, 
                  69, 71, 72, 73, 75, 76, 80, 81, 83, 84, 88, 89, 90, 91, 93, 
                  95, 96, 99, 100, 104, 105, 106, 107, 109, 111, 112, 116, 
                  118, 122, 125, 126, 127 ], 
              [ 3, 4, 8, 9, 10, 11, 13, 15, 16, 20, 22, 26, 29, 30, 31, 33, 
                  34, 35, 37, 39, 40, 41, 43, 44, 48, 49, 51, 52, 56, 57, 58, 
                  59, 61, 63, 64, 68, 70, 74, 77, 78, 79, 82, 85, 86, 87, 92, 
                  94, 98, 101, 102, 103, 108, 110, 113, 114, 115, 117, 119, 
                  120, 121, 123, 124, 128 ], [ 97 ] ], 29 ] ] ]
dd:=8;R:=[[1],[0,0],[1,1,1],[0,0,0,0],[1,1,1,1,1],[0,0,0,0,0,0],[1,1,1,1,1,1,1],[0,0,0,0,0,0,0,0]];D:=DIAG(R); VERFEINERUNG(D);#

dd:=dd+1; D:=Concatenation(D,D); VERFEINERUNG(D);
                                                                                            a
                                                a                       a           a   a b b
                        a           a     a  b  b           a     a  b  b     a  b  b c c c c
            a     a  b  b     a  b  b  c  c  c  c     a  b  b  c  c  c  c  d  d  d  d d d d d
   e  a  b  b  c  c  c  c  d  d  d  d  d  d  d  d  f  f  f  f  f  f  f  f  f  f  f  f f f f f 
#[ 2, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 2, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1 0 1 0 0 ]
#     x        x  x  y              y     y           x        x  x  y              y   y
#[ 2, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1,0,0,0,1, 
#     x        x  x  y              y     y        x  x  y     X     x  x  y     x  x       y
#  0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1,0,1,0,0 
#           y     y           y        x  x  y        y        x  x  y              y   y

#   a   a   a   a   a   a   a   a    a   a   a   a   a   a   a   a
# 0,x,0,0,x,x,1,0,0,0,0,1,0,1,0,0, x,x,1,0,1,0,x,x,1,0,x,x,0,0,0,1,
# 0,0,0,1,0,1,0,0,0,1,0,0,x,x,1,0, 0,1,0,0,x,x,1,0,0,0,0,1,0,1,0,0,
# 1,1,1,0,1,0,1,1,1,0,1,1,0,0,0,1, 1,0,1,1,0,0,0,1,1,1,1,0,1,0,1,1,
# 1,0,1,1,0,0,0,1,1,1,1,0,1,0,1,1, 0,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0,
# 0,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0, 0,1,0,0,1,1,1,0,0,0,0,1,0,1,0,0,
# 0,1,0,0,1,1,1,0,0,0,0,1,0,1,0,0, 1,1,1,0,1,0,1,1,1,0,1,1,0,0,0,1,
# 0,1,0,0,1,1,1,0,0,0,0,1,0,1,0,0, 1,1,1,0,1,0,1,1,1,0,1,1,0,0,0,1,
# 0,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0, 0,1,0,0,1,1,1,0,0,0,0,1,0,1,0,0
135,120,1
#×:1, 0, 1, 1, 
#x=[ 2, 6, 5, 22, 21, 18 ], y=[ 7, 12, 14, 28, 30, 23 ], 
a c ac, a f af, a bcf abcf, a bdf abdf, c f cf, c bf bcf,
#statt x^2=0 x^2=2 bei y^2=(yx)^2 für alle y
#statt x^2=1 x^2=3 bei y^2!=(yx)^2 für alle y

#x×y=x·1·y
#1×1=1
#0×0=1

#x×y=x·a^-1·y
#a×a=a also neutrales Element
#e×e=a^-1=a

#gebraucht wird sowas wie wenn x^2=y^2=1 und (xy)^2!=0, darf aber 0^_ sein

MARKZAHL:=function(G)
  local x,y,MERK,n,a,e;
  MERK:=[0,0,0,0];
  e:=Identity(G);
  n:=Size(G);
  for x in G do
    a:=true;
    if x^2=e then
      for y in G do if a then if not y^2=(y*x)^2 then a:=false; fi; fi; od;
      if a then MERK[3]:=MERK[3]+1; else MERK[1]:=MERK[1]+1; fi;
      else
        for y in G do if a then if y^2=(y*x)^2 then a:=false; fi; fi; od;
        if a then MERK[4]:=MERK[4]+1; else MERK[2]:=MERK[2]+1; fi;
        fi;
    od;
  g:=Gcd(MERK);
  MERK:=MERK/g;
  return [g,Reversed(SortedList(MERK)),MERK];
  end;
G:=SmallGroup(256,56082);
MARKZAHL(G);
  
for n in [2..9] do
  for index in [[1],[1],[2..4],[10..13],[45..50],[260..266],[2319..2327],[56082..56091],[10494201..10494212]][n] do
    G:=SmallGroup(2^n,index);
    Print(IdSmallGroup(G),", ",MARKZAHL(G),",\n");
    od;
  od;

TABELLE:=[
[ 4, 1 ], [ 2, [ 1, 1, 0, 0 ], [ 0, 0, 1, 1 ] ],
[ 8, 2 ], [ 4, [ 1, 1, 0, 0 ], [ 0, 0, 1, 1 ] ],
[ 8, 3 ], [ 2, [ 2, 1, 1, 0 ], [ 2, 1, 1, 0 ] ],
[ 8, 4 ], [ 2, [ 3, 1, 0, 0 ], [ 0, 3, 1, 0 ] ],
[ 16, 10 ], [ 8, [ 1, 1, 0, 0 ], [ 0, 0, 1, 1 ] ],
[ 16, 11 ], [ 4, [ 2, 1, 1, 0 ], [ 2, 1, 1, 0 ] ],
[ 16, 12 ], [ 4, [ 3, 1, 0, 0 ], [ 0, 3, 1, 0 ] ],
[ 16, 13 ], [ 2, [ 3, 3, 1, 1 ], [ 3, 3, 1, 1 ] ],
[ 32, 45 ], [ 16, [ 1, 1, 0, 0 ], [ 0, 0, 1, 1 ] ],
[ 32, 46 ], [ 8, [ 2, 1, 1, 0 ], [ 2, 1, 1, 0 ] ],
[ 32, 47 ], [ 8, [ 3, 1, 0, 0 ], [ 0, 3, 1, 0 ] ],
[ 32, 48 ], [ 4, [ 3, 3, 1, 1 ], [ 3, 3, 1, 1 ] ],
[ 32, 49 ], [ 2, [ 9, 6, 1, 0 ], [ 9, 6, 1, 0 ] ],
[ 32, 50 ], [ 2, [ 10, 5, 1, 0 ], [ 5, 10, 1, 0 ] ],
[ 64, 260 ], [ 32, [ 1, 1, 0, 0 ], [ 0, 0, 1, 1 ] ],
[ 64, 261 ], [ 16, [ 2, 1, 1, 0 ], [ 2, 1, 1, 0 ] ],
[ 64, 262 ], [ 16, [ 3, 1, 0, 0 ], [ 0, 3, 1, 0 ] ],
[ 64, 263 ], [ 8, [ 3, 3, 1, 1 ], [ 3, 3, 1, 1 ] ],
[ 64, 264 ], [ 4, [ 9, 6, 1, 0 ], [ 9, 6, 1, 0 ] ],
[ 64, 265 ], [ 4, [ 10, 5, 1, 0 ], [ 5, 10, 1, 0 ] ],
[ 64, 266 ], [ 2, [ 15, 15, 1, 1 ], [ 15, 15, 1, 1 ] ],
[ 128, 2319 ], [ 64, [ 1, 1, 0, 0 ], [ 0, 0, 1, 1 ] ],
[ 128, 2320 ], [ 32, [ 2, 1, 1, 0 ], [ 2, 1, 1, 0 ] ],
[ 128, 2321 ], [ 32, [ 3, 1, 0, 0 ], [ 0, 3, 1, 0 ] ],
[ 128, 2322 ], [ 16, [ 3, 3, 1, 1 ], [ 3, 3, 1, 1 ] ],
[ 128, 2323 ], [ 8, [ 9, 6, 1, 0 ], [ 9, 6, 1, 0 ] ],
[ 128, 2324 ], [ 8, [ 10, 5, 1, 0 ], [ 5, 10, 1, 0 ] ],
[ 128, 2325 ], [ 4, [ 15, 15, 1, 1 ], [ 15, 15, 1, 1 ] ],
[ 128, 2326 ], [ 2, [ 35, 28, 1, 0 ], [ 35, 28, 1, 0 ] ],
[ 128, 2327 ], [ 2, [ 36, 27, 1, 0 ], [ 27, 36, 1, 0 ] ],
[ 256, 56082 ], [ 128, [ 1, 1, 0, 0 ], [ 0, 0, 1, 1 ] ],
[ 256, 56083 ], [ 64, [ 2, 1, 1, 0 ], [ 2, 1, 1, 0 ] ],
[ 256, 56084 ], [ 64, [ 3, 1, 0, 0 ], [ 0, 3, 1, 0 ] ],
[ 256, 56085 ], [ 32, [ 3, 3, 1, 1 ], [ 3, 3, 1, 1 ] ],
[ 256, 56086 ], [ 16, [ 9, 6, 1, 0 ], [ 9, 6, 1, 0 ] ],
[ 256, 56087 ], [ 16, [ 10, 5, 1, 0 ], [ 5, 10, 1, 0 ] ],
[ 256, 56088 ], [ 8, [ 15, 15, 1, 1 ], [ 15, 15, 1, 1 ] ],
[ 256, 56089 ], [ 4, [ 35, 28, 1, 0 ], [ 35, 28, 1, 0 ] ],
[ 256, 56090 ], [ 4, [ 36, 27, 1, 0 ], [ 27, 36, 1, 0 ] ],
[ 256, 56091 ], [ 2, [ 63, 63, 1, 1 ], [ 63, 63, 1, 1 ] ],
[ 512, 10494201 ], [ 256, [ 1, 1, 0, 0 ], [ 0, 0, 1, 1 ] ],
[ 512, 10494202 ], [ 128, [ 2, 1, 1, 0 ], [ 2, 1, 1, 0 ] ],
[ 512, 10494203 ], [ 128, [ 3, 1, 0, 0 ], [ 0, 3, 1, 0 ] ],
[ 512, 10494204 ], [ 64, [ 3, 3, 1, 1 ], [ 3, 3, 1, 1 ] ],
[ 512, 10494205 ], [ 32, [ 9, 6, 1, 0 ], [ 9, 6, 1, 0 ] ],
[ 512, 10494206 ], [ 32, [ 10, 5, 1, 0 ], [ 5, 10, 1, 0 ] ],
[ 512, 10494207 ], [ 16, [ 15, 15, 1, 1 ], [ 15, 15, 1, 1 ] ],
[ 512, 10494208 ], [ 8, [ 35, 28, 1, 0 ], [ 35, 28, 1, 0 ] ],
[ 512, 10494209 ], [ 8, [ 36, 27, 1, 0 ], [ 27, 36, 1, 0 ] ],
[ 512, 10494210 ], [ 4, [ 63, 63, 1, 1 ], [ 63, 63, 1, 1 ] ],
[ 512, 10494211 ], [ 2, [ 135, 120, 1, 0 ], [ 135, 120, 1, 0 ] ],
[ 512, 10494212 ], [ 2, [ 136, 119, 1, 0 ], [ 119, 136, 1, 0 ] ],
];

for n in [2..8] do
  for index in [[1],[1],[2..4],[10..13],[45..50],[260..266],[2319..2327],[56082..56091],[10494201..10494212]][n] do
    G:=SmallGroup(2^n,index);
    Print(IdSmallGroup(G),", ",Size(OrbitsDomain(AutomorphismGroup(G),G)),",\n");
    od;
  od;

for n in [2..8] do
  for index in [[1],[1],[2..4],[10..13],[45..50],[260..266],[2319..2327],[56082..56091],[10494201..10494212]][n] do
    G:=SmallGroup(2^n,index);
    Print(IdSmallGroup(G),", ",Size(ConjugacyClasses(G)),",\n");
    od;
  od;

for n in [2..5] do
  for index in [[1],[1],[2..4],[10..13],[45..50],[260..266],[2319..2327],[56082..56091],[10494201..10494212]][n] do
    G:=SmallGroup(2^n,index);
    Print("\n-------------------------\n",IdSmallGroup(G),",\n");
    Display(CharacterTable(G));
    od;
  od;

F:=FreeGroup("e","f","a","b","c","d");AssignGeneratorVariables(F);
R:=ParseRelators([e,f,a,b,c,d],"e^2=e, f^2=e, \
  a^2=f, \
  b^2=(a*b)^2=e,  \
  c^2=(a*c)^2=(b*c)^2=f, \
  d^2=(a*d)^2=(b*d)^2=(c*d)^2=f \
  ");
G:=F/R;
IdSmallGroup(G);
T:=CharacterTable(G);Display(T);

F:=FreeGroup("e","f","a","b","c","d","g","h");AssignGeneratorVariables(F);
R:=ParseRelators([e,f,a,b,c,d,g,h],"e^2=e, f^2=e, \
  a^2=f, \
  b^2=(a*b)^2=e,  \
  c^2=(a*c)^2=(b*c)^2=f, \
  d^2=(a*d)^2=(b*d)^2=(c*d)^2=f, \
  g^2=e^2, (a*g)^2=a^2, (b*g)^2=b^2, (c*g)^2=c^2, (d*g)^2=d^2, \
  h^2=e^2, (a*h)^2=a^2, (b*h)^2=b^2, (c*h)^2=c^2, (d*h)^2=d^2, (d*h)^2=d^2 \
  ");
G:=F/R;
P:=Image(IsomorphismPermGroup(G));
IdSmallGroup(P);
T:=CharacterTable(G);Display(T);


