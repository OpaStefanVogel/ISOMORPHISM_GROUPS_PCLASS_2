#gap -L GAP_WORKSPACE #mit ERGS2_2945_20180813, AB_JETZT_NEU.txt bis RVOND4 mit dmax:=10 und PcgsOfR.txt.
##weiterer Versuch: Markierung verfeinern mit Aut(Aut(G)) oder wenigstens mit ConjugacyClasses
#Read("PcgsOfR.txt");
#0zuerst RVOND wenn nur 0,1 in D:
RVOND1:=function(dd,D)
  local d,j,R,RI;
  R:=[[0]];
  for d in [1..dd] do
    RI:=[D[2^(d-1)],D[2^(d-1)]];
    for j in [2..d] do
      Add(RI,D[2^(d-1)+2^(j-2)]);
      od;
    Add(R,RI);
    od;
  return R;
  end;
#RVOND1(4,[ 1, 1, 2, 1, 2, 3, 2, 0, 0, 0, 2, 0, 2, 3, 3 ]);[[0],[1,1],[1,1,2],[1,1,2,3],[0,0,0,0,0]];

#1zuerst als Probe aus ERGS1 echte Gruppen machen mit PcgsOfR:
dd:=4;
R:=ERGS1[dd][6]; #[[1],[1,1]], für PcgsOfR(R) muss das [[0],[1,1],[1,1,1]] sein, also los:
D:=DIAG(R); #ergibt [0,1,1,1]
Remove(D,1);
RD:=RVOND1(dd,D);[[0],[1,1],[1,1,1]];
G:=PcgsOfR(RD); IdSmallGroup(G); #müsste irgendein [8,x] sein

for dd in [1..7] do #IdSmallGroup nur bis 256=2*2^7
  Print("\n");
  for i in [1..Size(ERGS1[dd])] do
    R:=ERGS1[dd][i];
    D:=DIAG(R);
    Remove(D,1);
    RD:=RVOND1(dd,D);
    G:=PcgsOfR(RD); 
    ID:=IdSmallGroup(G);
    Print(ID);
    od;
  od;


#2wenn das bis hierher funktioniert, dann Versuch zusätzliche Markierung finden:

dd:=3; 
i:=1;
R:=ERGS1[dd][i];
D:=DIAG(R); 
  SD:=Size(D);
  C:=COMPDIAGSTABERZ(D);
  S:=Group(STABMACH2(C)); #hier vorsichtshalber nochmal mit Aut(G) vergleichen
  T:=ConjugacyClasses(S);
  U:=Orbits(S,[1..SD]);
  V:=List([1..Size(T)],i->Orbits(Group(List(T[i])),[1..SD]));
  W:=Collected(List(V,v->Collected(List(v,w->Collected(List(w,i->C[i]))))));
#Zwischenergebnis:
#U=  [ [ 1 ], [ 2, 3 ], [ 4 ], [ 5, 7, 6, 8 ] ]
#V=[ [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ], [ 6 ], [ 7 ], [ 8 ] ], 
#    [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5, 6, 7, 8 ] ], 
#    [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5, 8 ], [ 6, 7 ] ], 
#    [ [ 1 ], [ 2, 3 ], [ 4 ], [ 5, 8 ], [ 6, 7 ] ], 
#    [ [ 1 ], [ 2, 3 ], [ 4 ], [ 5, 6, 7, 8 ] ] ]
#das ist schon mal eine Verfeinerung 2/3 und 58/67