Auf geht's
<FILE id="P01" inhalt="R von 1...n auf 0...(n-1) umstellen">
#
Read("PcgsOfR.txt");
R4:=function(V)
  local i,R,V2;
  V2:=List(V);Add(V2,V2[1],1);Add(V2,V2[1],1);
  R:=[[0],[0,0],[1,1,1]];
  for i in [4..Size(V)+1] do Add(R,ListWithIdenticalEntries(i,0)); od;
  Add(R,V2);
  return R;
  end;

R:=R4([0,0]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([0,1]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([1,1]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([0,2]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([1,2]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([2,3]);P:=PcgsOfR(R);IdSmallGroup(P);

R:=R4([0,0,0,0,0,0]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([0,0,0,0,0,1]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([0,0,0,0,0,2]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([0,0,0,0,2,3]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([0,0,0,0,1,1]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([0,0,0,0,1,2]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([0,0,0,1,1,2]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([0,0,1,1,1,2]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([0,0,1,1,2,2]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([0,0,1,2,2,2]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([0,1,1,1,2,2]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([0,1,1,2,2,2]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([1,1,1,2,2,2]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([1,1,1,1,2,2]);P:=PcgsOfR(R);IdSmallGroup(P);
#Ergebnis: viele gleiche
  </FILE>

<FILE id="P02" inhalt="n=16 als 1:0">
Read("XSAMMEL.txt");
ClearProfile();
ERG:=[];XSAMMEL:=[];
IS:=[0,1];IS2:=[0,2];
for i1 in IS2 do 
  for i2 in IS2 do
    for i3 in IS do
      for i4 in IS do
        RT:=[i1+i3,i2+i4];
        Print("\n",RT);
        R:=R4(RT);
        G:=PcgsOfR(R);
        Print(IdSmallGroup(G),"\c");
        NEU:=RMAXSUCH(G);
        if NEU>0 then Add(ERG,RT); fi; 
        od;
      od;
    od;
  od;
ERG;
  </FILE>

<FILE id="P03" inhalt="n=16,32 als 1:0 mit ListX">
Read("XSAMMEL.txt");
ClearProfile();
FUN:=function(arg)
  RT:=[];
  j:=Size(arg)/2;
  for i in [1..j] do
    Add(RT,arg[i]+arg[i+j]);
    od;
  Print("\n",RT);
  R:=R4(RT);
  G:=PcgsOfR(R);
  Print(IdSmallGroup(G),"\c");
  NEU:=RMAXSUCH(G);
  if NEU>0 then Add(ERG,RT); fi;
  return [];
  end;
 
ERG:=[];XSAMMEL:=[];
IS:=[0,1];IS2:=[0,2];
ListX(IS2,IS2,IS,IS,FUN);;ERG;
ListX(IS2,IS2,IS2,IS,IS,IS,FUN);;ERG;
ListX(IS2,IS2,IS2,IS2,IS,IS,IS,IS,FUN);;ERG;
[ [ 0, 0 ], [ 0, 1 ], [ 1, 1 ], [ 0, 2 ], [ 1, 2 ], [ 2, 3 ], 
  [ 0, 0, 0 ], [ 0, 1, 1 ], [ 0, 0, 2 ], [ 0, 1, 2 ], [ 1, 1, 2 ], 
  [ 0, 2, 0 ], [ 1, 2, 1 ], [ 2, 2, 2 ] ]
ok warum dauert das was schon drin ist so lange, das ist die momentane Schwachstelle
  ok mit RTT() jetzt ok
  </FILE>

<FILE id="P04" inhalt="RTT() als schnelles RMAXSUCH wenn schon drin, n=16,32,64">
Read("XSAMMEL.txt");
ClearProfile();
R:=R4([1,2]);P:=PcgsOfR(R);IdSmallGroup(P);
R:=R4([2,3]);P:=PcgsOfR(R);IdSmallGroup(P);
#muss ich ja so machen dass mit dem R gesucht wird und nicht G bilden
NEU:=RMAXSUCH(P);
NEU:=RMAXSUCH(P);#da soll schon bei 0 Schluss sein
#so, aus QY13 rausmach:
PL:=Reversed(GeneratorsOfGroup(P));

RTT:=function()
  if HRES=[] then GR:=Group(P.1^0); else GR:=Group(HRES); fi;
  ri:=PL[S];
  Add(HRES,ri,1);HRESEXT[S]:=ri;
#  QY10(HRES,S,GR);#ob HRES wirklich ein pcgs ist, deshalb PL
  PNEU:=QY11(HRES,S);
  R[S]:=List(PNEU);
  HRESMERK:=List(HRES);
  n:=nn;ZR:=QY21(HRES,S,nn,ZEIGER,PNEU);;
  HRES:=List(ZR[1]);WEGLI[S]:=ZR[5];ZR3MERK:=ZR[3];
    S:=S+1;nn:=2*nn;ZEIGER:=ZR[2];;
  if ZR3MERK=-1 then return -10000; else
    if ZEIGER=[] then return 1; else return RTT()+1; fi;
    fi;
  end;

S:=1;nn:=1;HRES:=[];HRESEXT:=[];R:=[];WEGLI:=[];
ZEIGER:=XSAMMEL;;
NEU:=RTT();
inh:=1;
FUN:=function(arg)
  RT:=[];
  j:=Size(arg)/2;
  for i in [1..j] do
    Add(RT,arg[i]+arg[i+j]);
    od;
  Print("\n",RT);
  R:=R4(RT);RSIZE:=Size(R);
  P:=PcgsOfR(R);
#  Print(IdSmallGroup(P),"\c");
PL:=Reversed(GeneratorsOfGroup(P));
S:=1;nn:=1;HRES:=[];HRESEXT:=[];R:=[];WEGLI:=[];
ZEIGER:=XSAMMEL;;
  NEU:=RTT();Print(NEU);
  if NEU<>RSIZE then inh:=inh+1;RMAXSUCH(P);Add(ERG,RT); fi;
  return [];
  end;

ERG:=[];XSAMMEL:=[];
IS:=[1,0];IS2:=[0,2];
ListX(IS2,IS2,IS,IS,FUN);;ERG;#16
ListX(IS2,IS2,IS2,IS,IS,IS,FUN);;ERG;#32
ListX(IS2,IS2,IS2,IS2,IS,IS,IS,IS,FUN);;ERG;#64
ListX(IS2,IS2,IS2,IS2,IS2,IS,IS,IS,IS,IS,FUN);;ERG;#128
ListX(IS2,IS2,IS2,IS2,IS2,IS2,IS,IS,IS,IS,IS,IS,FUN);;ERG;#256
ListX(IS2,IS2,IS2,IS2,IS2,IS2,IS2,IS,IS,IS,IS,IS,IS,IS,FUN);;ERG;#512
ListX(IS2,IS2,IS2,IS2,IS2,IS2,IS2,IS2,IS,IS,IS,IS,IS,IS,IS,IS,FUN);;ERG;#1024
ok na, ganz ordentliches Ergebnis, reicht f√ºr heute: 3+3,2+6,3+11
[ [ 0, 0 ], [ 0, 1 ], [ 1, 1 ], [ 0, 2 ], [ 1, 2 ], [ 2, 3 ], [ 0, 0, 0 ], 
  [ 0, 1, 1 ], [ 0, 0, 2 ], [ 0, 1, 2 ], [ 1, 1, 2 ], [ 0, 2, 0 ], 
  [ 1, 2, 1 ], [ 2, 2, 2 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 1 ], [ 0, 1, 1, 1 ], 
  [ 0, 0, 0, 2 ], [ 0, 1, 1, 2 ], [ 0, 0, 2, 2 ], [ 0, 0, 2, 3 ], 
  [ 0, 1, 2, 2 ], [ 1, 1, 2, 2 ], [ 0, 2, 0, 0 ], [ 0, 2, 0, 1 ], 
  [ 1, 2, 1, 1 ], [ 2, 2, 2, 2 ], [ 2, 2, 2, 3 ], 
  [ 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 1 ], [ 0, 1, 1, 1, 1 ], [ 0, 0, 0, 0, 2 ], 
  [ 0, 0, 0, 1, 2 ], [ 0, 1, 1, 1, 2 ], [ 0, 0, 2, 2, 2 ], [ 0, 0, 2, 2, 3 ], 
  [ 0, 1, 2, 2, 2 ], [ 1, 1, 2, 2, 2 ], [ 0, 2, 0, 0, 0 ], [ 0, 2, 0, 0, 1 ], 
  [ 1, 2, 1, 1, 1 ], [ 2, 2, 2, 2, 2 ], [ 2, 2, 2, 2, 3 ] ] ]

umgekehrt [1,0]
[ [ 1, 1 ], [ 1, 0 ], [ 0, 0 ], [ 1, 3 ], [ 0, 3 ], [ 3, 2 ], 
  [ 1, 1, 1 ], [ 1, 0, 0 ], [ 1, 1, 3 ], [ 1, 0, 3 ], [ 0, 0, 3 ], 
  [ 1, 3, 1 ], [ 0, 3, 0 ], [ 3, 3, 3 ], [ 1, 1, 1, 1 ], [ 1, 1, 1, 0 ], 
  [ 1, 0, 0, 0 ], [ 1, 1, 1, 3 ], [ 1, 0, 0, 3 ], [ 1, 1, 3, 3 ], 
  [ 1, 1, 3, 2 ], [ 1, 0, 3, 3 ], [ 0, 0, 3, 3 ], [ 1, 3, 1, 1 ], 
  [ 1, 3, 1, 0 ], [ 0, 3, 0, 0 ], [ 3, 3, 3, 3 ], [ 3, 3, 3, 2 ] ]
[ [ 1, 1 ], [ 1, 0 ], [ 0, 0 ], [ 1, 3 ], [ 0, 3 ], [ 3, 2 ], [ 1, 1, 1 ],
  [ 1, 0, 0 ], [ 1, 1, 3 ], [ 1, 0, 3 ], [ 0, 0, 3 ], [ 1, 3, 1 ],
  [ 0, 3, 0 ], [ 3, 3, 3 ], [ 1, 1, 1, 1 ], [ 1, 1, 1, 0 ], [ 1, 0, 0, 0 ],
  [ 1, 1, 1, 3 ], [ 1, 0, 0, 3 ], [ 1, 1, 3, 3 ], [ 1, 1, 3, 2 ],
  [ 1, 0, 3, 3 ], [ 0, 0, 3, 3 ], [ 1, 3, 1, 1 ], [ 1, 3, 1, 0 ],
  [ 0, 3, 0, 0 ], [ 3, 3, 3, 3 ], [ 3, 3, 3, 2 ], [ 1, 1, 1, 1, 1 ],
  [ 1, 1, 1, 1, 0 ], [ 1, 0, 0, 0, 0 ], [ 1, 1, 1, 1, 3 ], [ 1, 1, 1, 0, 3 ],
  [ 1, 0, 0, 0, 3 ], [ 1, 1, 3, 3, 3 ], [ 1, 1, 3, 3, 2 ], [ 1, 0, 3, 3, 3 ],
  [ 0, 0, 3, 3, 3 ], [ 1, 3, 1, 1, 1 ], [ 1, 3, 1, 1, 0 ] ...
.. und dann bei [ 0, 3, 0, 0, 0 ] steckengelieben.
.. dauert auch alles zu lange, da war ich schon weiter (oder war das noch alt?)
.. danach kann ich auch die Sortierung innerhalb QY13 herausnehmen, das mit 1001 und so.
.. und auch ob sowas wie RTT() auch in QY13() rein muss.
.. und Diagonale auswerten
  </FILE>
