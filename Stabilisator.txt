FORTSETZ:=function(HRES,y,D) #setzt HRES,y zu einem gültigen pcgs fort und macht ein PHI daraus
  local PHI,i,j,k,HRESNEU,nochnichtgefunden;
  PHI:=[];HRESNEU:=[];
  i:=1;
  repeat
    if i<=Size(HRES) then HRESNEU[i]:=HRES[i]; fi;
    if i=Size(HRES)+1 then HRESNEU[i]:=y; fi;
    if i>Size(HRES)+1 then
      nochnichtgefunden:=true;
      for k in [1..Size(D)] do if nochnichtgefunden and not k in PHI then
        if D[k]=D[2^(i-1)] then 
          nochnichtgefunden:=false;
          for j in [1..Size(PHI)] do if nochnichtgefunden=false then 
            if D[XORMAT[PHI[j]+1][k+1]-1]<>D[2^(i-1)+j] then nochnichtgefunden:=true; fi;
            fi; od;
          if nochnichtgefunden=false then HRESNEU[i]:=k; fi;
          fi; fi; od;
      fi;
    PHI[2^(i-1)]:=HRESNEU[i];#ja!!!
    for j in [1..2^(i-1)-1] do
      PHI[2^(i-1)+j]:=XORMAT[PHI[j]+1][PHI[2^(i-1)]+1]-1;#ja!!!
      od;
    i:=i+1;
    until 2^(i-1)=Size(D)+1;
  return PermList(PHI);
  end;

FORTSETZ([1,2],4,[1,0,0,1,1,3,0]);#(2,3)(4,5)
FORTSETZ([1],3,[1,0,0,1,1,3,0]);#(2,3)(4,5)
FORTSETZ([], 4,[1,0,0,1,1,3,0]);#(1,4,5)(2,3,7)

LRESAUSHRES:=function(HRES)
  local LRES,i,j;
  LRES:=[];
  for i in [1..Size(HRES)] do
    LRES[2^(i-1)]:=HRES[i];
    for j in [1..Size(LRES)-1] do
      LRES[2^(i-1)+j]:=XORMAT[LRES[j]+1][HRES[i]+1]-1;
      od;
    od;
  return LRES;
  end;
LRESAUSHRES([1,2,27]);
  
STABERZ:=function(MENGE,HRES,STAB,D)
  local MENGENEU,STABNEU,x,y,i,DRIN,PHI,DK,PHI0;
  #1
  x:=MENGE[1];STABNEU:=STAB;
  LRES:=LRESAUSHRES(HRES);
  #2
  MENGENEU:=[];
  for y in MENGE do
    DRIN:=true;
    ##Print("\ny=",y," ",D[y]," ",D[x]);
    if D[y]<>D[x] then DRIN:=false; fi;
    for i in [1..Size(LRES)] do
     ##Print(" i=",i," ",D[XORMAT[HRES[i]+1][y+1]-1]," ",D[XORMAT[HRES[i]+1][x+1]-1]);
      if D[XORMAT[LRES[i]+1][y+1]-1]<>D[XORMAT[LRES[i]+1][x+1]-1] then DRIN:=false; fi;
      od;
    if DRIN then Add(MENGENEU,y); fi;
    od;
  ##Print("\nMENGENEU=",MENGENEU,"\n\c");
  #3
  repeat
    y:=MENGENEU[1];
    #4
    DK:=List(D);Remove(DK,1);
    ##Print("\n",MENGENEU,HRES,y,D,"\n\c");
    PHI:=FORTSETZ(HRES,y,D);
    #5
    if not PHI in STABNEU then Add(STABNEU,PHI); fi;
    ##Print("\n",PHI,STABNEU,"\n\c");
    #6
    MENGENEU:=Difference(MENGENEU,Orbit(Group(STABNEU),x));
  #7
    until MENGENEU=[];
  #8
  return STABNEU;
  end;
 
STAB:=[];
# 0  1  2  3  4  5  6  7
# e  a  b ab  c ac bc abc
D:=[ 1, 0, 0, 1, 1, 3, 0];#D
STAB:=STABERZ([4..7],[1,2],STAB,D);
STAB:=STABERZ([2..7],[1],STAB,D);
STAB:=STABERZ([1..7],[],STAB,D);
Size(STAB);
Size(Group(STAB));#6 laut 4788 und 4752R

STAB:=[];
#  0  1  2  3  4  5  6  7  8  9 10  11 12  13  14   15
#  e  a  b ab  c ac bc abc d ad bd abd cd acd bcd abcd
D:=[ 1, 0, 0, 1, 1, 1, 0, 0, 0, 0,  1, 0,  1,  0,   0];#F
STAB:=STABERZ([8..15],[1,2,4],STAB,D);
STAB:=STABERZ([4..15],[1,2],STAB,D);
STAB:=STABERZ([2..15],[1],STAB,D);
STAB:=STABERZ([1..15],[],STAB,D);
Size(STAB);
Size(Group(STAB));#72

STAB:=[];
#  0 1  2  3  4  5  6  7  8  9 10  11 12  13  14   15
#  e a  b ab  c ac bc abc d ad bd abd cd acd bcd abcd
D:=[ 1, 0, 0, 1, 1, 1, 0, 1, 1, 1,  0, 1,  0,  1,   1];#G
STAB:=STABERZ([8..15],[1,2,4],STAB,D);
STAB:=STABERZ([4..15],[1,2],STAB,D);
STAB:=STABERZ([2..15],[1],STAB,D);
STAB:=STABERZ([1..15],[],STAB,D);
Size(STAB);
Size(Group(STAB));#120

STAB:=[];
#  0 1  2  3  4  5  6  7  8  9 10  11 12  13  14   15
#  e a  b ab  c ac bc abc d ad bd abd cd acd bcd abcd
D:=[ 1, 1, 1];#C
#STAB:=STABERZ([8..15],[1,2,4],STAB,D);
#STAB:=STABERZ([4..15],[1,2],STAB,D);
STAB:=STABERZ([2..3],[1],STAB,D);
STAB:=STABERZ([1..3],[],STAB,D);
Size(STAB);
Size(Group(STAB));#6

STAB:=[];
#  0 1  2  3  4  5  6  7  8  9 10  11 12  13  14   15
#  e a  b ab  c ac bc abc d ad bd abd cd acd bcd abcd
D:=[ 1, 0, 0];#B
#STAB:=STABERZ([8..15],[1,2,4],STAB,D);
#STAB:=STABERZ([4..15],[1,2],STAB,D);
STAB:=STABERZ([2..3],[1],STAB,D);
STAB:=STABERZ([1..3],[],STAB,D);
Size(STAB);
Size(Group(STAB));#2

STAB:=[];
# 0  1  2  3  4  5  6  7  8  9 10  11 12  13  14   15
# e  a  b ab  c ac bc abc d ad bd abd cd acd bcd abcd
D:=[ 1, 0, 0, 1, 1, 3, 0, 2, 1, 0, 0, 1, 1, 3, 0];#D'
STAB:=STABERZ([8..15],[1,2,4],STAB,D);
STAB:=STABERZ([4..15],[1,2],STAB,D);
STAB:=STABERZ([2..15],[1],STAB,D);
STAB:=STABERZ([1..15],[],STAB,D);
Size(STAB);
Size(Group(STAB));#48

STAB:=[];
# 0  1  2  3  4  5  6  7  8  9 10  11 12  13  14   15
# e  a  b ab  c ac bc abc d ad bd abd cd acd bcd abcd
D:=[ 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1];#C''
STAB:=STABERZ([8..15],[1,2,4],STAB,D);
STAB:=STABERZ([4..15],[1,2],STAB,D);
STAB:=STABERZ([2..15],[1],STAB,D);
STAB:=STABERZ([1..15],[],STAB,D);
Size(STAB);
Size(Group(STAB));#576

#-----------
#Test STABERZ mit P25: Ergebnis Size(STAB)=16 22 29 37 46
COMPDIAGSTABERZ:=function(D)#aus COMPDIAG4 mit geändertem RETURN
  local RET,i,j,k,l,jkl,jkli,dj,dk,dl,RET2,reti,SD,DD;
  SD:=Size(D);DD:=[];
  for i in [1..SD] do DD[i]:=D[i]+2; od;
  for jkli in [1..(SD-1)*(SD-2)/6] do
    jkl:=JKLLISTE[jkli];
    j:=jkl[1];k:=jkl[2];l:=jkl[3];
    dj:=D[j];dk:=D[k];dl:=D[l];
#Print("\n",jkl," ",dj," ",dk," ",dl);
    if dj=1 and dk=dl then DD[j]:=1; fi;
    if dj=0 and dk<>dl then DD[j]:=0; fi;
    if dk=1 and dj=dl then DD[k]:=1; fi;
    if dk=0 and dj<>dl then DD[k]:=0; fi;
    if dl=1 and dk=dj then DD[l]:=1; fi;
    if dl=0 and dk<>dj then DD[l]:=0; fi;
    od;
#Print("\n",DD);
  RET:=Collected(List(DD));
  RET:=Reversed(SortedList(List(RET,i->i[2])));
  return DD;
  end;

STABMACH:=function(dd,D)
  local STAB,ddd;
  STAB:=[];
  for ddd in [dd,dd-1..1] do 
    STAB:=STABERZ([2^(ddd-1)..2^dd-1],List([1..ddd-1],i->2^(i-1)),STAB,D);
    od;
  return STAB;
  end;

for dd in [1..10] do
  Print("\n\ndd=",dd);
  for kd in [1..a[dd]] do
    x:=DIAG(KANTENZUG(dd,kd));
    x:=COMPDIAGSTABERZ(x);
    Remove(x,1);
    D:=x;
    STAB:=STABMACH(dd,D);
    Print("\n",kd," ",Size(STAB)," ",Size(Group(STAB)));#576
    od;
  od;

dd=1
1 1 1

dd=2
1 2 2
2 2 2
3 3 6

dd=3
1 4 8
2 4 24
3 3 6
4 4 24

dd=4
1 7 192
2 7 1344
3 6 72
4 5 48
5 6 576
6 5 120

dd=5
1 11 21504
2 11 322560
3 9 1152
4 8 2304
5 9 64512
6 6 1920
7 6 720

dd=6
1 16 10321920
2 16 319979520
3 13 110592
4 12 516096
5 13 30965760
6 8 184320
7 8 51840
8 7 23040
9 8 40320

dd=7
1 22 20478689280
2 22 1290157424640
3 18 49545216
4 17 495452160
5 18 61436067840
6 11 82575360
7 10 3317760
8 9 4423680
9 9 1451520
10 9 2580480

dd=8
1 29 165140150353920
2 29 20972799094947840
3 24 95126814720
4 23 1965954170880
5 24 495420451061760
6 15 158544691200
7 13 1274019840
8 12 3963617280
9 11 394813440
10 11 185794560
11 11 990904320
12 10 348364800

