#zuvor AB_JETZT_NEU.txt, mit Aut(G) weiter unterteilen.
#verwende ERGS2 aus GAP_WORKSPACE von 20180318

ASUCH:=function(D) #Sucht Aehnlichkeiten der Diagonalelemente
  local RET,SD,S,D1,D2,C1,C2,S1,S2,SX,TX,VX,WX;
  SD:=Size(D); S:=LogInt(SD,2);
  #D3:=List(D,i->Int(i/4));
  D1:=List(D,i->Int((i mod 4)/2));
  D2:=List(D,i->i mod 2);
  C1:=COMPDIAGSTABERZ(D1);
  C2:=COMPDIAGSTABERZ(D2);
  #C3:=COMPDIAGSTABERZ(D3);  
  S1:=Group(STABMACH2(C1));
  S2:=Group(STABMACH2(C2));
  #S3:=Group(STABMACH2(C3));
  SX:=Intersection(S1,S2); #,S3);
  TX:=ConjugacyClasses(SX);
  VX:=List([1..Size(TX)],i->Orbits(Group(List(TX[i])),[1..SD]));
  #WX:=List(VX,v->List(v,w->List(w,i->-i)));
  #WX:=List(VX,v->List(v,w->List(w,i->[C1[i],C2[i]])));
  WX:=Collected(List(VX,v->Collected(List(v,w->Collected(List(w,i->[C1[i],C2[i]]))))));
  RET:=[SX,C1,C2,TX,VX,WX];
  return RET;
  end;

R:=[[3],[3,3],[3,3,3]];D:=DIAG(R);ASUCH(D);
dd:=5;GA:=[];for i in [1..Size(ERGS2[dd])] do
  R:=2*ERGS2[dd][i][1]+ERGS2[dd][i][2];
  D:=DIAG(R);
  WX:=ASUCH(D)[6];
  if not (WX in GA) then Add(GA,WX); else Error(i," schon drin als ",Position(GA,WX)); fi;
  od;
#Ergebnis: 61 als 22, 67 als 49

i:=22; R1:=2*ERGS2[dd][i][1]+ERGS2[dd][i][2]; D1:=DIAG(R1); AX1:=ASUCH(D1);
i:=61; R2:=2*ERGS2[dd][i][1]+ERGS2[dd][i][2]; D2:=DIAG(R2); AX2:=ASUCH(D2);
AX1[6]=AX2[6];D1;D2;AX1[5];AX2[5];AX1[1];AX2[1];

i:=49; R1:=2*ERGS2[dd][i][1]+ERGS2[dd][i][2]; D1:=DIAG(R1); AX1:=ASUCH(D1);
i:=67; R2:=2*ERGS2[dd][i][1]+ERGS2[dd][i][2]; D2:=DIAG(R2); AX2:=ASUCH(D2);
AX1[6]=AX2[6];D1;D2;AX1[5];AX2[5];AX1[1];AX2[1];

ASUCH2:=function(D) #Sucht Aehnlichkeiten der Diagonalelemente
  local RET,SD,S,D1,D2,C1,C2,S1,S2,SX,TX,VX,WX,DRD;
  DRD:=DIAG(RVOND(dd,D));
  SD:=Size(DRD); S:=LogInt(SD,2);
  #D3:=List(DRD,i->Int(i/4));
  D1:=List(DRD,i->Int((i mod 4)/2));
  D2:=List(DRD,i->i mod 2);
  C1:=COMPDIAGSTABERZ(D1);
  C2:=COMPDIAGSTABERZ(D2);
  #C3:=COMPDIAGSTABERZ(D3);  
  S1:=Group(STABMACH2(C1));
  S2:=Group(STABMACH2(C2));
  #S3:=Group(STABMACH2(C3));
  SX:=Intersection(S1,S2); #,S3);
  TX:=ConjugacyClasses(SX);
  VX:=List([1..Size(TX)],i->Orbits(Group(List(TX[i])),[1..SD]));
  #WX:=List(VX,v->List(v,w->List(w,i->-i)));
  #WX:=List(VX,v->List(v,w->List(w,i->[C1[i],C2[i]])));
  WX:=Collected(List(VX,v->Collected(List(v,w->Collected(List(w,i->[C1[i],C2[i]]))))));
  RET:=[SX,C1,C2,TX,VX,WX];
  return RET;
  end;

i:=22; R1:=2*ERGS2[dd][i][1]+ERGS2[dd][i][2]; D1:=DIAG(R1); AX1:=ASUCH2(D1);
i:=61; R2:=2*ERGS2[dd][i][1]+ERGS2[dd][i][2]; D2:=DIAG(R2); AX2:=ASUCH2(D2);
AX1[6]=AX2[6];#D1;D2;AX1[5];AX2[5];AX1[1];AX2[1];

i:=49; R1:=2*ERGS2[dd][i][1]+ERGS2[dd][i][2]; D1:=DIAG(R1); AX1:=ASUCH2(D1);;
i:=67; R2:=2*ERGS2[dd][i][1]+ERGS2[dd][i][2]; D2:=DIAG(R2); AX2:=ASUCH2(D2);;
AX1[6]=AX2[6];#D1;D2;AX1[5];AX2[5];AX1[1];AX2[1];

